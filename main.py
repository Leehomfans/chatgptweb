import json
from operator import truediv
from fastapi import FastAPI
import time
from fastapi.responses import StreamingResponse
from revChatGPT.V1 import Chatbot
from fastapi.responses import HTMLResponse
from fastapi.middleware.cors import CORSMiddleware
app = FastAPI()
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
@app.get("/chat")
async def root(question: str, response_class=HTMLResponse):
    chatbot = Chatbot(config={
        "session_token":"eyJhbGciOiJkaXkVJ61nShqxlqavZsXw9B2Eya-qZYuG_iAd6VbZ6qej6N7y79y2ftPF9c7rOEO5Wjm7ste1oz1qyAu47N_tUs0JfV1XO-m7FjxQvYMZJaFYCgT-yG0ZEdRQUgWMFqLYXuo2VZq_-wMFN3XYpDcXrRQu5y-Z-ZmLiCyhpwSYWBMOWIrNoLYxIkCJRve81fsIY5at1AY3R4D3LMb_p3FQGNTRNMyYSqnY6kMeVRvxs_JqByq4OEhUPO-zUUzEXJbt0gRGNeg6GMviR_DiUiUJBPBlZKv_yG99z1gK8hyln5UYKmcDSG-C4-giAKNCSP5qvzNJqti0iUoHkrDdvotb9tn6UBujz94d5Cdv6C6djoGCap-pns2kWje3MPr_BMolW0EAgj6aLHkt-wlI9a1QhSNjybBwqOJPq_PhZ4TJzqYaqRdzmYO5WOv4uBfErDC1RvBtzTQ4ulOBurOfJJzo7xoDeOWaHDbIzAmaTtz7reBKspMhWmfjLY17-CiCVNu2Z34QDC--8ZdQyCvJBywKi8rbyGZhD4xAEoULqQwoY8sPB4BgJS0cNqQ-VBz-ncM0W_F8PXFiRLWiHXlHIq4-9J08Z9nTHIF7u14CNX5h4AfobZmiFgqtur_fMUjk8_YQ425Py2K7QKeOJzZAdWjzE3b11uFKwcBW6jj6-57TqK9o-X8r1P2xt8HeXWTvwiieOS7nX9q8XimhJIf1jW7NQ1FndlyTVEsrdnh2SVI6y5eI49noGYh-An6VK2Be9LLZAlEip8pOKP02rJ29S02ryqXM8VWFlaqefRVQI9dIt2YkIRguS8s71kq5ORGRSt60rb_SldGG-EflG8e11WOnMYPGySo6C1FupjIEMtv5GJbrdtMR7ZOQ3nCGYFQ8eCvxfFqEXiC60YOQIpaOELXfOHnYI6xmZAsgRQtv3n_3aFwRPf789jejqIMHPNPazoTMBSmeNGjDXMtxo70siFLL5ojC-y8jvAq2o1TVlLWJuwGi2u70HWNCeLU7YC0sbq3t-tgrKFOnLUI6AH9pzI6YwcxRt_giaMFQyXMLM7OIQgFrZZYaQE0EPtTrwEvT7C8QtNEWM1J6CMVTq0IzZscE1KKI7a9qNZeh-COA1SKGxd6HSRslHau-d67C5no9z9jXp1ki3HHh7eFGxLONGwbn2kdPuvsS4dpmoXHDCJoKxnWO-R-r7duusgzFoIwh__5IchjPqtOXukdUBSveQ2YeK5V3TLDAwFRPp3_kPuF2wsgEaeugtsoFlQPe_QpDCSJvgLI3KsMTzjfoie97rs-iPIDMuAsfEvyu2Lzn2Hqpb3VIorVT1OadtAryltKoVkTKB7tSw4n7dVQxfC8a7Jfrtpj7jaRS0qTygU_3H1K_Yeto6_2sMO4Gs8LG7vVYEyEZnilgP6PzbSjCdjuUBSDvb3Syc7jGbp74RPGH6sSFhZMMhscW8nZZ6wyMeUiQyFpnPnltCfQmaWLA-PxOhsFDESgYeXRrESNfgKu67dYrcD2-jRXOA1lnB-kvfPvQ9uwtmkryYC7-gI-Q1sXDC_WUuSa6_qNUBTuFjnh-XzBe9p139Nsoa8mGdQdoTEoaksi9zjryw_Av-Lz9r6jMs4G6OI0Ci7sknmGB3UlHQ64aLxncS4gQP2w1jJd3p8fzhbxYa6n79pLAuE0tWy23Ae9wgbZ03t_WQ19iDv8F_Y5l4aok2zboSNtcLY_uR3zT81wBEu_Qcpr9P8mN2HChoFoundGdVD6IPhS5YPAZhGFbDVkRp67XkKHmnI6t7PVkpJhdBSmzx6kgeB9SgpoPDJLG8pZ8jisBFzCec9VZP6m9h_rD3MQV9VCS2MNSK9_bPiIbumM-SeGwd7AnRIy1eT3PM57waefgmgQgXVh2Y04O6hMZ0t7yFMK-ucqdt0YqovSwyguQa4XYeZcUIMVb-Cxj5NcoGGUh3h2ZfNp3dQgYnOTfhi3Pqgt3Tfb0obYH8v18owXcdB3gNczWLhZlxm5HwDqsDyFBOZFRrrcAxBktW97MdlFG4e7K4kN7N0yAyHKw8p1bWgR3kdysjX5ywS4143IUVbqZyZYBhw-pyGYJlLrmJfV-1Nbkuo2-vRSSwpKZc1RIvYNHRK8VLbuScCt1E4kP-AlxIw7kdizRwRJpJD6uSaFdZX-AtAagXlsWBAC2WX8iyidZRllj5QzzOXlm8J3l729MFErWs1Nc3UI_Sc8MJJ8QsJ1pobPt0UPNvIyG-xULJYvlw5M6KLPDJzkMP1mxYJgjXbFptxNkJsyMk3hP8YJPZ7dGDY_KcDhHQQzXagK4SYXiubu2-zbfw4-S5stMPqxYMBcCDmTkw4qPtMECemLh1-nKDxUI5VQVHB2LxLk3C2XVqRXIKOCRzCJN-rbrcLw1oV67HNWk-_iAVW1ZDz3hKLnlgVXjujRYeA0SinoKirDdA5BfIJ_YEFWWyoLSL_P6QALLYjfuxaPPS1S93h76dtlhGsDT3Lo8hNzLMHJXqvFxO5xDskBuspBfbSJhoeXtjPhVZPH0Hlb7O2sPb_aUDmErciojbL14M59HUS8iOcqJY4FEqWGCIwkFSGKhhaxMabt-B3j4JCdZtuR0nAOzVDT4peYQzZH1jxog3Tu3Ceh2xaArHbFZqZBSPJFdZAKsjMeAk8xA4-CXf99tmk3KCmy2VsIMkqYXYRKE_tg-ALdLQ18lWoUjAg.jtLqUoiO8Zx60Dbx1cIl0g"# "eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..5hyL4SNQUhK9_0aT.nLriDL6FIPe3VbePxD34zrAtdicON_PkiFYbHeIZsRoBu0wUWSkokw6T6HwdYagJvObWqu3lP0TC29eG9xq86g-C122isiKh256nxRPX3g4sGH9DkjcO0MoeJPGG29nhkKaCq4aOwDHVwELa-TIDJIumkS1XyF3brfH_Uk5xq7tNx8AncUHtP6O11izQz1ROugh_BLBlbEMBvz4BRiWhLW9R6NqI1cAcGeqb-VSBPr2E4RotdRmKHJ4buGa39TJSKRhXuzHJXtLe-EMJcEabsNYQdSQhmCTR_md4LM9ca3JApCB-e0Z6KnfAymwAjYSgFJHGNG__DdNYmoXTYXo7Sow7pKSO7McVuEdesxAuVrBJx7q2Ia1zFYU1ADR_zzu-yx-rPe7_vMm7ed9pCJ-RBKlQyB9eF7ybw2Uo_hV3wnbzuU73tLm8O5MH24bCyUAMuR--iKzknQjX3de600cQFKUsbiwqzSar2BMR5Xkd8lENuC04b40Hd6rHTqphho8OEOAIQyRM6cjy8ndQ8tGASCRQD16gUXcssX6itFUrdrDA3wrQTUYpZK0Zmp0eyTpG9yAjsAQ04w2Qk5tMVu3EcLWnXQTNTkZH8CyFtyJyKP0cpf14LGQmpGpxH_gjvLi7vVrOvsUvknfvWtCcXCWY3Fa6jZ_d0ZxRbrrullD9OOJ1diE9LiWSgVJ4MFOxSA3d-OjuUNDuX1NF56NbqEPbf1VJaA_nzbVEy6iOknYhDpraw3wxMCcSzpRKK1fJpq7MKNBKRKQfZdMZCMOVjQLnb-Yqa3oVIrtQrTAmd6mFHCh1PfFzH4ZFyJ5joAzCtM6JjFrRA5NOPXnldC3SGVoRuzbKEO-YAw9c8-yMqO49GXtBHrKMKB2KG4JQNelQ_EdcfYybcjJM4U7rlQ9T-yAlcbZqaWc4Pd9W_h2fL_tqi3hUd67qGcNl_PxSdodkDTxg_EWG7k-fo5qbP7abpHpPgS8uTfA4h19nDFvNOh-foS0x6z9WVCavZn3vmlJ91x0wv2iKMjRYPd2cx_arGxLJO_j0k4C50TsnqgtjaMEXAN8QVBd4G4zomGdmE6C3d4TMQx-CGxnqLxSAiNlayFma8wf0v6kNqVLQlyBPaEUyouw8mR855UAldqN_qgNqoDHjBpKhN9RKj9GZLKs3IHqzyXO7deWMhpZus_1rr5C5ts7O6F4In17Ud0ILtjohIgYjbi6e8XJqFjpLgDqyl1oQrHcgEIUOBAyF--Tel_JO8kmiNjhcZHfahqNkCr9UKPUaju7ZOVYJ228hksWe_dpCnKe7tiTR24wIVJakc6MdT-a9J4ciwNyCkEyFEnqt6GO3N17BA3AJlPBUHQkr-wQ0-lLKQIb69FFUhmvN2--t2oQa5tBK9VFaKyQyz-PExM3HKK51YD_D-Ze5ZaVBUal99iLnxXiZ_oWeZlUnVDWf-ztKQIu0KD4VQNGQmFyyud2dK5kMU6qTydcL3wDeGQAMtywL7aWSzyjgpBq72zDmYNXmokzt_Pb4b6WZcgeq4w4QXJjQhAQnPh0Ojs3GLwqgIqkZPFrWwgWsrGp1IaX9z8vZpBFqABSpzI1hEEN0Lp1kMgeXgMZ27SGI90fBaGQ7YzQU6hP_fZE3bpzgyNN-hxVxB3QTHBUencSJhVgVIX7JYIIrCzHO-rFoVGjcQwmFH5VL3ijoNKBgkc5qgfwSRFfQ2SiPIsIpLk_1KdfBahC-nv_b2Q_P7hX2RjkGPFL7g-oWt8YhPo7oQ-IjSdTdoeMbB9BzIntQ_90j6mG8nKqr9crgm5Rw2yo7E1T9VbVo-pmUt6Ac2T42S0wgFamqE1kSvs2vdsf5RA_r4w2tke7od40I2YntjvEQJX_I1L_dHprRQG4T2PXD1_PmJ9o0za83TYy6NO5lCXHOywA-qsa7c6l2mDmX9TdWQK7_NYkSxjw-QJZw7klbdIyuqGl82WALdia9zxB7BQRrUgWnwmQj3On6SRvtLIZJuhUvgjoawxdvoQpvsMDUNIZxSaphyqO2EgfE0CLVe-KFWkpyJkMDPijXTB5waUh-fUYkQRZfQUybzJeXcU_ubxKyDlJ1dznIrGEW-h4DO50zN_ZBm8RdwWo6XpaQcZqiBA3pMldHfwSPXLqnJdFCCpJFw7KNkI8dqxLKT0ilG4Q9VJWTLMhTzJ58zA01A7zjS3ttlbGI4EhZE2ELjZkw9yrv8IBakMn1J9OD38YIfkLUTpMY9t3eFPYeNVpc1lps1mgzfi7rQ9jN4GrJ__aeniqa_ORHHtTANFZueWkJZ6HwkowFSWkdELcTfTIHGja6JAbo2avxYqR58L8FvZBr7Ta5L0R7lIfRLjP7yOMh7nPOTiPuQbGANvuz86F8akV7CoXKVC7uuf-IA5G-CanWv6a3bN_yaj3T26Zdd2-lFCpOTzYxINOHJwm_lnwQU2I6G30AcOOqZ-8kIZHvlD3QtnKVR3wSiFGM8JF2QKBz10BfNsJyb-gmr2eZmQe_oM0vlf9wtigJ1aPFJMcOX2Wn8MbLh9y0P7FIx-qBdlILsPI7unQAk36CIjymMiVEugO_qKc_xltwv3o7hRx2W5QOhH2BvTd0BK35fqKeoO6zbDZr0tqcT0P6wLiaY9RLq-WHMtT4NpyrKeYb18vojwCNgvCkixu5EeDt8hznqjDC.x9qrWdV8D3tFI1yoT7qPhA"
    })
    print("Chatbot: ")
    async def read_data():
        prev_text = ""
        for data in chatbot.ask(
        question):
            message = data["message"][len(prev_text):]
            #print(message, end="", flush=True)
            prev_text = data["message"]
            if(message.endswith('\n')):
                yield 'data: {}<br/>\n\n'.format(message.replace('\n', ''))
            else:
                yield 'data: {}\n\n'.format(message)   
    return StreamingResponse(content=read_data(), media_type='text/event-stream')


